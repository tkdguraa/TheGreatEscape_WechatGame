import { Multi } from "redis";
export declare const useUnderlyingImpl: Set<"object" | "del" | "select" | "time" | "command" | "readonly" | "readwrite" | "auth" | "redis" | "append" | "bgrewriteaof" | "bgsave" | "bitcount" | "bitfield" | "bitop" | "bitpos" | "brpoplpush" | "dbsize" | "decr" | "decrby" | "discard" | "dump" | "echo" | "eval" | "evalsha" | "exec" | "exists" | "expire" | "expireat" | "flushall" | "flushdb" | "geoadd" | "geohash" | "geopos" | "geodist" | "georadius" | "georadiusbymember" | "get" | "getbit" | "getrange" | "getset" | "hdel" | "hexists" | "hget" | "hgetall" | "hincrby" | "hincrbyfloat" | "hkeys" | "hlen" | "hmget" | "hmset" | "hset" | "hsetnx" | "hstrlen" | "hvals" | "incr" | "incrby" | "incrbyfloat" | "info" | "keys" | "lastsave" | "lindex" | "linsert" | "llen" | "lpop" | "lpush" | "lpushx" | "lrange" | "lrem" | "lset" | "ltrim" | "mget" | "migrate" | "monitor" | "move" | "mset" | "msetnx" | "multi" | "persist" | "pexpire" | "pexpireat" | "pfadd" | "pfcount" | "pfmerge" | "ping" | "psetex" | "psubscribe" | "pubsub" | "pttl" | "publish" | "punsubscribe" | "quit" | "randomkey" | "rename" | "renamenx" | "restore" | "role" | "rpop" | "rpoplpush" | "rpush" | "rpushx" | "sadd" | "save" | "scard" | "sdiff" | "sdiffstore" | "set" | "setbit" | "setex" | "setnx" | "setrange" | "shutdown" | "sinter" | "sinterstore" | "sismember" | "slaveof" | "slowlog" | "smembers" | "smove" | "sort" | "spop" | "srandmember" | "srem" | "strlen" | "subscribe" | "sunion" | "sunionstore" | "swapdb" | "sync" | "touch" | "ttl" | "type" | "unsubscribe" | "unlink" | "unwatch" | "wait" | "watch" | "zadd" | "zcard" | "zcount" | "zincrby" | "zinterstore" | "zlexcount" | "zrange" | "zrangebylex" | "zrevrangebylex" | "zrangebyscore" | "zrank" | "zrem" | "zremrangebylex" | "zremrangebyrank" | "zremrangebyscore" | "zrevrange" | "zrevrangebyscore" | "zrevrank" | "zscore" | "zunionstore" | "scan" | "sscan" | "hscan" | "zscan" | "execMulti">;
export declare const additionalFunctions: {
    execMulti: <T = {}>(multi: Multi) => Promise<T[]>;
};
export declare type AdditionalFunctions = typeof additionalFunctions;
